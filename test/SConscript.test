# vim ft=python

Import('env')

envCopy = env.Clone()

modelDir = 'Model'

envCopy.Append(
                CPPPATH = '../src/',
                CCFLAGS = '-O2 -std=c++0x',
                LINKFLAGS = '-std=c++0x -lpthread -lboost_serialization -lpqxx'
              )


sourceTargets = [ 'modelTest.cpp',
                  'AlignmentProcessor.cpp',
                  'TrackManager.cpp', ]
#                  'CandidateSelector.cpp' ]

targets = []
for source in sourceTargets:
  targets.append(modelDir + '/' + source)

# Build one or more test runners.
program = envCopy.Program('test', targets, LIBS=['boost_unit_test_framework','Model'],LIBPATH='../build')
# Depend on the runner to ensure that it's built before running it - Note: using abspath.
test_alias = Alias('test', [program], program[0].abspath)
# Simply required.  Without it, 'test' is never considered out of date.
env.AlwaysBuild(test_alias)
